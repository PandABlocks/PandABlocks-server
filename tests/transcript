# Simple server test script.  Consists of commands to send and the expected
# response, the test_exchange script validates this.

# First check for out of order return
< *IDN?
< *IDN?
> OK =PandA
> OK =PandA

# Start with the identification exchange
< *IDN?
> OK =PandA

< *IDN?
> OK =PandA

# Simple echo command
< *ECHO this is an echo?
> OK =this is an echo

< *ECHO?
> ERR Character ' ' expected

# The simplest meta-data inquiry.
# Note that the order of the returned values depends on both the internal
# hashtable implementation and the ordering in the config file.
< *BLOCKS?
> !TTLIN 6
> !OUTENC 4
> !CALC 2
> !SRGATE 4
> !PCOMP 4
> !LUT 8
> !TTLOUT 10
> !LVDSOUT 2
> !ADC 8
> !DIV 4
> !INENC 4
> !COUNTER 8
> !ADDER 1
> !PCAP 1
> !POSENC 4
> !LVDSIN 2
> !PGEN 2
> !QDEC 4
> !SEQ 4
> !PULSE 4
> .

# Now we can read and write some I/O fields
< TTLOUT1.VAL=TTLIN3.VAL
> OK

< TTLOUT1.VAL?
> OK =TTLIN3.VAL

< TTLOUT0.VAL=TTLIN0.VAL
< TTLOUT1.VAL=TTLIN1.VAL
< TTLOUT2.VAL=TTLIN2.VAL
< TTLOUT3.VAL=TTLIN3.VAL
< TTLOUT4.VAL=TTLIN4.VAL
< TTLOUT5.VAL=TTLIN5.VAL
< TTLOUT6.VAL=TTLIN0.VAL
< TTLOUT7.VAL=TTLIN1.VAL
< TTLOUT8.VAL=TTLIN2.VAL
< TTLOUT9.VAL=TTLIN3.VAL
> OK
> OK
> OK
> OK
> OK
> OK
> OK
> OK
> OK
> OK

< TTLOUT0.VAL?
< TTLOUT1.VAL?
< TTLOUT2.VAL?
< TTLOUT3.VAL?
< TTLOUT4.VAL?
< TTLOUT5.VAL?
< TTLOUT6.VAL?
< TTLOUT7.VAL?
< TTLOUT8.VAL?
< TTLOUT9.VAL?
> OK =TTLIN0.VAL
> OK =TTLIN1.VAL
> OK =TTLIN2.VAL
> OK =TTLIN3.VAL
> OK =TTLIN4.VAL
> OK =TTLIN5.VAL
> OK =TTLIN0.VAL
> OK =TTLIN1.VAL
> OK =TTLIN2.VAL
> OK =TTLIN3.VAL

# Now a few top level error responses
< x
> ERR Unknown command

< *IDN?x
> ERR Unexpected text after command

< *x?
> ERR Unknown command

< *x=
> ERR Unknown command

< TTLIN.*=
> ERR Field not writeable


# Testing the parsing of entity names.  As these are quite complex there are a
# lot of error possibilities to work through.

< ?
> ERR No name found

< xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx?
> ERR Name too long

< x?
> ERR No such block

< TTLIN?
> ERR Missing field name

< TTLIN23?
> ERR Block number too large

< TTLIN2?
> ERR Missing field name

< TTLIN2.*?
> ERR Block number not allowed

< TTLIN2.x?
> ERR No such field

< TTLIN.VAL?
> ERR Missing block number

< TTLIN.VAL.?
> ERR Missing block number

< TTLIN0.VAL.?
> ERR No name found

< TTLIN2.VAL.*?
> ERR Block number not allowed

< *IDN<
> ERR Not a table

< TTLIN2.VAL<
> ERR Field is not a table

< TTLIN.*?
> !VAL bit_out bit
> !TERM param enum
> .

< TTLIN2.VAL=x
> ERR Field not writeable

< TTLIN2.TERM=0
> OK

< TTLIN2.TERM?
> OK =dummy

< INENC3.BITS=33
> OK

< INENC3.BITS?
> OK =33

< INENC3.BITS=64
> ERR Number out of range

# Unimplemented functionality

< PCOMP2.TABLE<
# < 1 2 3 4 5 6 7 8
# < 9
# <
> ERR block.field< not implemented yet

< PCOMP2.TABLE<B2
# < 1234567
> ERR block.field< not implemented yet

< PCOMP2.TABLE<<
# < 1 2 3 4 5 6 7 8
# < 9
# <
> ERR block.field< not implemented yet

< TTLIN.VAL.*?
> .

< DIV.DIVISOR.*?
> !MAX
> .

< DIV0.DIVISOR.MAX?
> OK =4294967295

< INENC0.BITS.MAX?
> OK =63

< TTLIN2.TERM.ENUMS?
> ERR No such attribute

< TTLIN2.TERM.ENUMS=x
> ERR No such attribute


# There's a surprising delay on the block operations.  Try doing them all in one
# go instead.
< PCOMP2.TABLE<
# < 1 2 3 4 5 6 7 8
# < 9
# <
< PCOMP2.TABLE<B2
# < 1234567
< PCOMP2.TABLE<<
# < 1 2 3 4 5 6 7 8
# < 9
# <
> ERR block.field< not implemented yet
> ERR block.field< not implemented yet
> ERR block.field< not implemented yet

# Testing position fields
< QDEC.SETP.*?
> !RAW
> !SCALE
> !OFFSET
> !UNITS
> .


< QDEC1.SETP.SCALE=0.1
> OK

< QDEC1.SETP.OFFSET=100.3
> OK

< QDEC1.SETP=123.45
> OK

< QDEC1.SETP?
> OK =123.5

< QDEC1.SETP.RAW?
> OK =232

< QDEC1.SETP.SCALE?
> OK =0.1

< QDEC1.SETP.OFFSET?
> OK =100.3

< QDEC1.SETP.UNITS=mm
> OK

< QDEC1.SETP.UNITS?
> OK =mm

# LUT
< LUT.*?
> !FUNC param lut
> !INPB bit_in 
> !INPC bit_in 
> !INPA bit_in 
> !VAL bit_out bit
> !INPD bit_in 
> !INPE bit_in 
> .

< LUT.FUNC.*?
> !RAW
> .

< LUT0.FUNC=0x123
> OK

< LUT0.FUNC?
> OK =0x123

< LUT0.FUNC.RAW?
> OK =291

< LUT0.FUNC=A&B|C=>D^E
> OK

< LUT0.FUNC=A&F
> ERR Invalid token

< LUT0.FUNC?
> OK =A&B|C=>D^E
