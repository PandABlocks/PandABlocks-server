# Descriptions of possible PandA types

# The following classes are built in and hard-wired:

# in
#
# This represents an input to a block from the bit or word bus.  Each in value
# has a corresponding register where the input multiplexor can be selected, and
# the only action on in values is to set this value.  A corresponding out name
# will be used to write such a value, the corresponding numerical index will be
# hidden.

bit_in
    register    BIT_NAME

pos_in
    register    WORD_NAME

# out
#
# This represents an output from a block onto the bit or word bus.  Each value
# has an index which will be used as the corresponding name when selecting it as
# an input.  The current value can be read and there is a change notification
# mechanism.

bit_out
    index       BIT_NAME
    register    bit_type

pos_out
    index       WORD_NAME
    register    word_type

All words will be uniform and will be scaled and offset

pos_type   32-bit-word
    RAW         32-bit
    OFFSET      float
    SCALING     float
    SCALED      float

# param
#
#


# Some useful types

# String parsed by parse_lut.  Perhaps have option for setting and reading the
# direct numerical value.  Expect to support something like the following
# syntax:
#
#   LUT0.FUNC=A=B?C:D                   # Writes LUT defined by 'A=B?C:D'
#   LUT0.FUNC=0xf0ccccf0                # Writes LUT numerically
#   LUT0.FUNC?                          # Returns LUT string
#
# Alas, writing a numerical LUT entry will invalidate the function string.
lut_function    string

enum            list of strings
    STRING
    INDEX
    LIST

# SCALED value here depends on prescale value
scaled_time
    RAW         32-bit
    SCALED      float
    UNITS       enum(us,ms,s)

prescale        32-bit

# This is something complicated...
#
#  Actually, it's 512 rows of 64-bit numbers encoding the following fields
seq_table[512]
    nrepeats
    input_mask
    input_cond
    phase1_out
    phase2_out
    phase1_time
    phase2_time
    # The times here are 16-bit scaled times taking the prescale into account


pgen_table[512]

pcomp_table[128K]
