#!/bin/bash

# Script for testing behaviour of server when running against configurations
# with parse errors.

HERE="$(dirname "$0")"

TEST_TEMPLATE="$HERE/test_config_tests"
VERBOSE=0

while getopts 't:vh' option; do
    case "$option" in
        t)  TEST_TEMPLATE="$OPTARG" ;;
        v)  VERBOSE=1 ;;
        h)  cat <<'EOF'
Usage: test_configs [-v] [-t <test-script>] [<tests>]
Runs tests from the given test-script.
    -v  Run in verbose mode
    -t: Specify test script, default is ./test_config_tests
    -h  Show this help
EOF
            exit 0 ;;
        *)  echo >&2 'Invalid options: try -h for help'
            exit 1 ;;
    esac
done
shift $((OPTIND-1))



# Assemble all the tests into separate directories and files
TEMP_DIR="$(mktemp -d)"
trap "rm -rf $TEMP_DIR" EXIT

TESTS=($(
    sed '/^#/d; /^$/d' "$TEST_TEMPLATE" |
    while read -r; do
        case "$REPLY" in
            --*)
                TEST="${REPLY#-- }"
                echo "$TEST"
                TEST_DIR="$TEMP_DIR/$TEST"
                mkdir "${TEST_DIR}"
                ;;
            -*)
                TEST_FILE="$TEST_DIR"/"${REPLY#- }"
                touch "$TEST_FILE"
                ;;
            *)
                printf '%s\n' "$REPLY" >>"$TEST_FILE"
                ;;
        esac
    done
))

# If user has specified specific tests then run only those
(($# > 0))  &&  TESTS=("$@")


echo Running tests "${TESTS[@]}"
failed=0
for test in "${TESTS[@]}"; do
    config="$TEMP_DIR/$test"
    if [[ -d "$config" ]]; then
        result="$("$HERE"/../simserver -c "$config" -V-q -- -T 2>&1 >/dev/null)"
        if grep -q '^==' <<<"$result"; then
            echo $test Error
            cat <<<"$result"
            failed=$((failed + 1))
        else
            echo $test Ok
            ((VERBOSE))  &&  cat <<<"$result"
        fi
    else
        echo $test not found
    fi
done

exit $((failed > 0 ? 1 : 0))
